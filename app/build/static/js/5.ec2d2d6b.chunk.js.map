{"version":3,"sources":["../../rust/pkg/index_bg.js","wasm.js"],"names":["cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","wasm","Uint8Array","subarray","greet","alloc","size","dealloc","cap","sharpen","dest_pointer","width","height","emboss","sobel","box_blur","laplacian","__wbg_alert_89681084c6c0f08d","arg0","arg1","alert","memory"],"mappings":"mHAAA,8TAEIA,EAAoB,IAAIC,YAAY,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAE3EH,EAAkBI,SAElB,IAAIC,EAAuB,KAQ3B,SAASC,EAAmBC,EAAKC,GAC7B,OAAOR,EAAkBI,QAPI,OAAzBC,GAAiCA,EAAqBI,SAAWC,IAAYD,SAC7EJ,EAAuB,IAAIM,WAAWD,IAAYD,SAE/CJ,GAI2CO,SAASL,EAAKA,EAAMC,IAInE,SAASK,IACZH,MAOG,SAASI,EAAMC,GAElB,OADUL,IAAWK,GAQlB,SAASC,EAAQT,EAAKU,GACzBP,IAAaH,EAAKU,GAQf,SAASC,EAAQC,EAAcC,EAAOC,GACzCX,IAAaS,EAAcC,EAAOC,GAQ/B,SAASC,EAAOH,EAAcC,EAAOC,GACxCX,IAAYS,EAAcC,EAAOC,GAQ9B,SAASE,EAAMJ,EAAcC,EAAOC,GACvCX,IAAWS,EAAcC,EAAOC,GAQ7B,SAASG,EAASL,EAAcC,EAAOC,GAC1CX,IAAcS,EAAcC,EAAOC,GAQhC,SAASI,EAAUN,EAAcC,EAAOC,GAC3CX,IAAeS,EAAcC,EAAOC,GAGjC,IAAMK,EAA+B,SAASC,EAAMC,GACvDC,MAAMvB,EAAmBqB,EAAMC,M,wGCtFnC,6cAEO,IAAME,EAASpB","file":"static/js/5.ec2d2d6b.chunk.js","sourcesContent":["import * as wasm from './index_bg.wasm';\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport function greet() {\n    wasm.greet();\n}\n\n/**\n* @param {number} size\n* @returns {number}\n*/\nexport function alloc(size) {\n    var ret = wasm.alloc(size);\n    return ret;\n}\n\n/**\n* @param {number} ptr\n* @param {number} cap\n*/\nexport function dealloc(ptr, cap) {\n    wasm.dealloc(ptr, cap);\n}\n\n/**\n* @param {number} dest_pointer\n* @param {number} width\n* @param {number} height\n*/\nexport function sharpen(dest_pointer, width, height) {\n    wasm.sharpen(dest_pointer, width, height);\n}\n\n/**\n* @param {number} dest_pointer\n* @param {number} width\n* @param {number} height\n*/\nexport function emboss(dest_pointer, width, height) {\n    wasm.emboss(dest_pointer, width, height);\n}\n\n/**\n* @param {number} dest_pointer\n* @param {number} width\n* @param {number} height\n*/\nexport function sobel(dest_pointer, width, height) {\n    wasm.sobel(dest_pointer, width, height);\n}\n\n/**\n* @param {number} dest_pointer\n* @param {number} width\n* @param {number} height\n*/\nexport function box_blur(dest_pointer, width, height) {\n    wasm.box_blur(dest_pointer, width, height);\n}\n\n/**\n* @param {number} dest_pointer\n* @param {number} width\n* @param {number} height\n*/\nexport function laplacian(dest_pointer, width, height) {\n    wasm.laplacian(dest_pointer, width, height);\n}\n\nexport const __wbg_alert_89681084c6c0f08d = function(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\n","import * as wasm from \"wasm_algos/index_bg.wasm\";\nexport * from \"wasm_algos/index_bg\";\nexport const memory = wasm.memory;\n"],"sourceRoot":""}