{"version":3,"sources":["WebAssembly_Logo.svg","cam/cam.ts","cam/index.tsx","App.tsx","reportWebVitals.js","index.js","cam/cam.module.css","cam/worker.ts"],"names":["Cam","sliderRef","canvas","hiddenCanvas","video","sobelButton","boxBlurButton","sharpenButton","embossButton","laplacianButton","current","ctx","hctx","wasm","memory","wasmSrc","pointer","lastTime","Infinity","ticks","effect","workers","workersFinished","width","height","numThreads","navigator","hardwareConcurrency","numJobs","addEventListener","e","document","querySelector","innerHTML","target","value","Number","a","makeWasmSrc","wasm_bindgen","__wbindgen_export_0","mediaDevices","getUserMedia","then","camLoaded","catch","console","log","fileParts","window","location","href","split","length","pop","srcPath","replace","slice","drawToCanvas","time","toFixed","drawFps","videoWidth","videoHeight","byteSize","alloc","requestAnimationFrame","allocateMemory","drawImage","b1","b2","imageData","getImageData","data","buffer","Uint8Array","byteLength","set","i","sobel","box_blur","sharpen","emboss","laplacian","workerMesageRecieved","message","type","loaded","Date","getTime","workerFinished","Uint8ClampedArray","imageDataUpdated","ImageData","putImageData","stream","getContext","srcObject","workerInstance","worker","loadWasm","push","createWorkers","useRef","useEffect","cam","className","css","sliderContainer","id","ref","max","min","slider","flex","sideDiv","buttonList","hide","autoPlay","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports","addMethods","methods","w","Worker","name"],"mappings":"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","file":"static/js/main.ad857c14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/WebAssembly_Logo.1381587b.svg\";","import React from \"react\";\n//@ts-ignore\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport {Wasm} from \"./camera\";\n\ndeclare function wasm_bindgen(script: string): void\n\nexport default function Cam(\n    sliderRef: React.RefObject<HTMLInputElement>,\n    canvas: React.RefObject<HTMLCanvasElement>,\n    hiddenCanvas: React.RefObject<HTMLCanvasElement>,\n    video: React.RefObject<HTMLVideoElement>,\n    sobelButton: React.RefObject<HTMLButtonElement>,\n    boxBlurButton: React.RefObject<HTMLButtonElement>,\n    sharpenButton: React.RefObject<HTMLButtonElement>,\n    embossButton: React.RefObject<HTMLButtonElement>,\n    laplacianButton: React.RefObject<HTMLButtonElement>\n) {\n    if (sliderRef.current === null) return;\n    if (canvas.current === null) return;\n    if (hiddenCanvas.current === null) return;\n    if (video.current === null) return;\n    if (sobelButton.current === null) return;\n    if (boxBlurButton.current === null) return;\n    if (sharpenButton.current === null) return;\n    if (embossButton.current === null) return;\n    if (laplacianButton.current === null) return;\n\n    let ctx: CanvasRenderingContext2D | null,\n        hctx: CanvasRenderingContext2D | null,\n        wasm: Wasm,\n        pointer = -1,\n        lastTime = Infinity,\n        ticks = 0,\n        effect = 0,\n        workers: Wasm[] = [],\n        workersFinished = 0,\n        width = 0,\n        height = 0,\n        memory: {buffer: SharedArrayBuffer},\n        wasmSrc: string,\n        numThreads = navigator.hardwareConcurrency,\n        numJobs = navigator.hardwareConcurrency;\n\n    function makeWasmSrc() {\n        let fileParts = window.location.href.split(\"/\")\n        if (fileParts[fileParts.length - 1] === \"\") fileParts.pop()\n        let srcPath = window.location.href.replace(\n            fileParts[fileParts.length - 1], fileParts[fileParts.length - 1] + \"/pkg/index_bg.wasm\")\n        if (srcPath[srcPath.length - 1] === \"/\") srcPath = srcPath.slice(0, -1)\n        wasmSrc = srcPath;\n    }\n\n    function allocateMemory(width: number, height: number) {\n        if (!(video.current && canvas.current && hiddenCanvas.current)) return;\n        hiddenCanvas.current.width = width\n        hiddenCanvas.current.height = height\n        canvas.current.width = width;\n        canvas.current.height = height;\n        const byteSize = width * height * 4;\n        //@ts-ignore\n        pointer = wasm.alloc(byteSize);\n        return requestAnimationFrame(drawToCanvas)\n    }\n\n    function drawToCanvas(time: number) {\n        if (!(video.current && canvas.current && hiddenCanvas.current)) return;\n        drawFps(time)\n        width = video.current.videoWidth;\n        height = video.current.videoHeight;\n        // do we need to allocate memory?\n        if (width > 0 && canvas.current && pointer === -1) return allocateMemory(width, height)\n        // draw webcam to canvas\n        hctx?.drawImage(video.current, 0, 0, width, height);\n        // do we have no effect selected? is the canvas ready?\n        if (effect === 0 || !(width > 0 && canvas.current && ctx && hctx)) {\n            ctx?.drawImage(video.current, 0, 0, width, height);\n            return requestAnimationFrame(drawToCanvas)\n        }\n        // get image data from the canvas\n        const imageData = hctx.getImageData(0, 0, width, height);\n        memcopy(imageData.data.buffer, memory.buffer, pointer)\n        numJobs = numThreads;\n        switch (effect) {\n            case 1:\n                for(let i = 0; i < numThreads; i++) {\n                    workers[i].sobel(pointer, width, height, i, numThreads)\n                }\n                break;\n            case 2:\n                for(let i = 0; i < numThreads; i++) {\n                    workers[i].box_blur(pointer, width, height, i, numThreads)\n                }\n                break;\n            case 3:\n                for(let i = 0; i < numThreads; i++) {\n                    workers[i].sharpen(pointer, width, height, i, numThreads)\n                }\n                break;\n            case 4:\n                for(let i = 0; i < numThreads; i++) {\n                    workers[i].emboss(pointer, width, height, i, numThreads)\n                }\n                break;\n            case 5:\n                for(let i = 0; i < numThreads; i++) {\n                    workers[i].laplacian(pointer, width, height, i, numThreads)\n                }\n                break;\n        }\n    }\n\n    function workerMesageRecieved(message: MessageEvent) {\n        if (message.data.type) return;\n\n        if (message.data.loaded && workersFinished === numJobs - 1) {\n            workersFinished = 0;\n            drawToCanvas(new Date().getTime())\n        } else if (message.data.loaded) {\n            workersFinished += 1;\n        } else if (message.data.workerFinished && workersFinished === numJobs - 1) {\n            workersFinished = 0;\n            const data = new Uint8ClampedArray(memory.buffer, pointer, width * height * 4).slice(0);\n            const imageDataUpdated = new ImageData(data, width, height);\n            ctx?.putImageData(imageDataUpdated, 0, 0)\n            requestAnimationFrame(drawToCanvas)\n        } else if (message.data.workerFinished) {\n            workersFinished += 1;\n        }\n    }\n\n    function createWorkers() {\n        for (let i = 0; i < numThreads; i++) {\n            const workerInstance = worker()\n            workerInstance.addEventListener('message', workerMesageRecieved)\n            workerInstance.loadWasm(wasmSrc, memory)\n            workers.push(workerInstance)\n        }\n    }\n\n    function camLoaded(stream: MediaStream) {\n        if (canvas.current !== null) {\n            ctx = canvas.current.getContext('2d');\n        }\n        if (hiddenCanvas.current !== null) {\n            hctx = hiddenCanvas.current.getContext('2d')\n        }\n        if (video.current) {\n            video.current.srcObject = stream;\n        }\n\n        createWorkers()\n    }\n\n    function wasmLoaded() {\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({video: true})\n                .then(camLoaded)\n                .catch(function () {\n                    console.log(\"Something went wrong!\");\n                });\n        }\n    }\n\n    function memcopy(b1: ArrayBufferLike, b2: ArrayBufferLike, offset: number) {\n        new Uint8Array(b2, offset, b1.byteLength).set(new Uint8Array(b1));\n    }\n\n    function drawFps(time: number) {\n        if (ticks % 5 === 0) {\n            //@ts-ignore\n            document.querySelector(\"#fps\").innerHTML = (1000 / (time - lastTime)).toFixed(2);\n        }\n        ticks += 1;\n        if (ticks > 5) ticks = 0;\n        lastTime = time;\n    }\n\n    sobelButton.current.addEventListener(\"click\", () => {\n        effect = effect === 1 ? 0 : 1\n    })\n\n    boxBlurButton.current.addEventListener(\"click\", () => {\n        effect = effect === 2 ? 0 : 2\n    })\n\n    sharpenButton.current.addEventListener(\"click\", () => {\n        effect = effect === 3 ? 0 : 3\n    })\n\n    embossButton.current.addEventListener(\"click\", () => {\n        effect = effect === 4 ? 0 : 4\n    })\n\n    laplacianButton.current.addEventListener(\"click\", () => {\n        effect = effect === 5 ? 0 : 5\n    });\n\n    sliderRef.current.addEventListener(\"input\", (e) => {\n        //@ts-ignore\n        document.querySelector(\"#slider-concurrency\").innerHTML = e.target.value;\n        //@ts-ignore\n        numThreads = Number(e.target.value)\n    });\n\n    (async () => {\n        makeWasmSrc();\n        //@ts-ignore\n        wasm = await wasm_bindgen(wasmSrc);\n        //@ts-ignore\n        memory = wasm.__wbindgen_export_0;\n        wasmLoaded()\n    })();\n\n}\n","import {useEffect, useRef} from \"react\";\nimport css from './cam.module.css'\nimport cam from './cam'\n\nfunction Cam() {\n    const canvas = useRef<HTMLCanvasElement>(null)\n    const hiddenCanvas = useRef<HTMLCanvasElement>(null)\n    const video = useRef<HTMLVideoElement>(null)\n    const sobelButton = useRef<HTMLButtonElement>(null)\n    const boxBlurButton = useRef<HTMLButtonElement>(null)\n    const sharpenButton = useRef<HTMLButtonElement>(null)\n    const embossButton = useRef<HTMLButtonElement>(null)\n    const laplacianButton = useRef<HTMLButtonElement>(null)\n    const sliderRef = useRef<HTMLInputElement>(null)\n\n\n    useEffect(() => cam(sliderRef, canvas, hiddenCanvas, video, sobelButton, boxBlurButton, sharpenButton, embossButton, laplacianButton),\n        [sobelButton, video, canvas])\n\n    return (\n        <>\n            <div className={css.sliderContainer}>\n                <label>Concurrency: <span id={\"slider-concurrency\"} >{navigator.hardwareConcurrency}</span></label>\n                <input ref={sliderRef} type=\"range\" max={navigator.hardwareConcurrency} min={1} className={css.slider} />\n            </div>\n        <div className={css.flex}>\n            <div className={css.sideDiv}>\n                <ul className={css.buttonList}>\n                    <li><button ref={sobelButton}>Sobel Edge Detection</button></li>\n                    <li><button ref={boxBlurButton}>Box Blur</button></li>\n                    <li><button ref={sharpenButton}>Sharpen</button></li>\n                    <li><button ref={embossButton}>Emboss</button></li>\n                    <li><button ref={laplacianButton}>Laplacian</button></li>\n                </ul>\n            </div>\n            <canvas ref={canvas} > </canvas>\n            <canvas className={css.hide} ref={hiddenCanvas}/>\n            <video className={css.hide} autoPlay={true} ref={video} />\n            <div className={css.sideDiv}/>\n        </div>\n        </>\n    );\n}\n\nexport default Cam;\n","import logo from './WebAssembly_Logo.svg';\nimport './App.css';\nimport Cam from \"./cam\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Cam effects with <code>wasm</code> and <code>rust</code> <span id={\"fps\"}></span>fps\n        </p>\n\n          <Cam />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"cam_hide__3ofNy\",\"flex\":\"cam_flex__22L5-\",\"sideDiv\":\"cam_sideDiv__1_1lG\",\"buttonList\":\"cam_buttonList__TsgiK\",\"sliderContainer\":\"cam_sliderContainer__3EaNK\",\"slider\":\"cam_slider__3jfm3\"};","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"box_blur\",\"sobel\",\"sharpen\",\"emboss\",\"laplacian\",\"loadWasm\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"96cf4658b9e6d69be773.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}