{"version":3,"sources":["WebAssembly_Logo.svg","cam/cam.ts","cam/index.tsx","App.tsx","reportWebVitals.js","index.js","cam/cam.module.css","cam/worker.ts"],"names":["Cam","canvas","video","sobelButton","boxBlurButton","sharpenButton","embossButton","laplacianButton","current","ctx","wasm","memory","wasmSrc","pointer","lastTime","Infinity","ticks","effect","workers","workersFinished","width","height","addEventListener","a","makeWasmSrc","wasm_bindgen","__wbindgen_export_0","navigator","mediaDevices","getUserMedia","then","camLoaded","catch","console","log","fileParts","window","location","href","split","length","pop","srcPath","replace","slice","drawToCanvas","time","document","querySelector","innerHTML","toFixed","drawFps","videoWidth","videoHeight","byteSize","alloc","requestAnimationFrame","allocateMemory","drawImage","b1","b2","imageData","getImageData","data","buffer","Uint8Array","byteLength","set","i","box_blur","hardwareConcurrency","workerMesageRecieved","message","type","loaded","Date","getTime","workerFinished","Uint8ClampedArray","imageDataUpdated","ImageData","putImageData","stream","getContext","srcObject","workerInstance","worker","loadWasm","push","createWorkers","useRef","useEffect","cam","className","css","flex","sideDiv","buttonList","ref","hide","autoPlay","App","src","logo","alt","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports","addMethods","methods","w","Worker","name"],"mappings":"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","file":"static/js/main.dee30602.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/WebAssembly_Logo.1381587b.svg\";","import React from \"react\";\n//@ts-ignore\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport {Wasm} from \"./camera\";\n\ndeclare function wasm_bindgen(script: string): void\n\nexport default function Cam(\n    canvas: React.RefObject<HTMLCanvasElement>,\n    video: React.RefObject<HTMLVideoElement>,\n    sobelButton: React.RefObject<HTMLButtonElement>,\n    boxBlurButton: React.RefObject<HTMLButtonElement>,\n    sharpenButton: React.RefObject<HTMLButtonElement>,\n    embossButton: React.RefObject<HTMLButtonElement>,\n    laplacianButton: React.RefObject<HTMLButtonElement>\n) {\n    if (canvas.current === null) return;\n    if (video.current === null) return;\n    if (sobelButton.current === null) return;\n    if (boxBlurButton.current === null) return;\n    if (sharpenButton.current === null) return;\n    if (embossButton.current === null) return;\n    if (laplacianButton.current === null) return;\n\n    let ctx: CanvasRenderingContext2D | null,\n        wasm: Wasm,\n        pointer = -1,\n        lastTime = Infinity,\n        ticks = 0,\n        effect = 0,\n        workers: Wasm[] = [],\n        workersFinished = 0,\n        width = 0,\n        height = 0,\n        memory: {buffer: SharedArrayBuffer},\n        wasmSrc: string;\n\n    function makeWasmSrc() {\n        let fileParts = window.location.href.split(\"/\")\n        if (fileParts[fileParts.length - 1] === \"\") fileParts.pop()\n        let srcPath = window.location.href.replace(\n            fileParts[fileParts.length - 1], fileParts[fileParts.length - 1] + \"/pkg/index_bg.wasm\")\n        if (srcPath[srcPath.length - 1] === \"/\") srcPath = srcPath.slice(0, -1)\n        wasmSrc = srcPath;\n    }\n\n    function allocateMemory(width: number, height: number) {\n        if (!(video.current && canvas.current)) return;\n        canvas.current.width = width;\n        canvas.current.height = height;\n        const byteSize = width * height * 4;\n        pointer = wasm.alloc(byteSize);\n        return requestAnimationFrame(drawToCanvas)\n    }\n\n    function drawToCanvas(time: number) {\n        if (!(video.current && canvas.current)) return;\n        drawFps(time)\n        width = video.current.videoWidth;\n        height = video.current.videoHeight;\n        // do we need to allocate memory?\n        if (width > 0 && canvas.current && pointer === -1) return allocateMemory(width, height)\n        // draw webcam to canvas\n        ctx?.drawImage(video.current, 0, 0, width, height);\n        // do we have no effect selected? is the canvas ready?\n        if (effect === 0 || !(width > 0 && canvas.current && ctx)) return requestAnimationFrame(drawToCanvas)\n        // get image data from the canvas\n        const imageData = ctx.getImageData(0, 0, width, height);\n        memcopy(imageData.data.buffer, memory.buffer, pointer)\n        switch (effect) {\n            case 2:\n                for(let i = 0; i < workers.length; i++) {\n                    workers[i].box_blur(pointer, width, height, i, navigator.hardwareConcurrency)\n                }\n                break;\n        }\n    }\n\n    function workerMesageRecieved(message: MessageEvent) {\n        if (message.data.type) return;\n\n        if (message.data.loaded && workersFinished === navigator.hardwareConcurrency - 1) {\n            workersFinished = 0;\n            drawToCanvas(new Date().getTime())\n        } else if (message.data.loaded) {\n            workersFinished += 1;\n        } else if (message.data.workerFinished && workersFinished === navigator.hardwareConcurrency - 1) {\n            console.log(\"workers are all finished\")\n            workersFinished = 0;\n            const data = new Uint8ClampedArray(memory.buffer, pointer, width * height * 4).slice(0);\n            const imageDataUpdated = new ImageData(data, width, height);\n            ctx?.putImageData(imageDataUpdated, 0, 0)\n\n            requestAnimationFrame(drawToCanvas)\n        } else if (message.data.workerFinished) {\n            workersFinished += 1;\n        }\n    }\n\n    function createWorkers() {\n        for (let i = 0; i < navigator.hardwareConcurrency; i++) {\n            const workerInstance = worker()\n            workerInstance.addEventListener('message', workerMesageRecieved)\n            workerInstance.loadWasm(wasmSrc)\n            workers.push(workerInstance)\n        }\n    }\n\n    function camLoaded(stream: MediaStream) {\n        if (canvas.current !== null) {\n            ctx = canvas.current.getContext('2d');\n        }\n        if (video.current) {\n            video.current.srcObject = stream;\n        }\n\n        createWorkers()\n    }\n\n    function wasmLoaded() {\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({video: true})\n                .then(camLoaded)\n                .catch(function () {\n                    console.log(\"Something went wrong!\");\n                });\n        }\n    }\n\n    function memcopy(b1: ArrayBufferLike, b2: ArrayBufferLike, offset: number) {\n        new Uint8Array(b2, offset, b1.byteLength).set(new Uint8Array(b1));\n    }\n\n    function drawFps(time: number) {\n        if (ticks % 5 === 0) {\n            //@ts-ignore\n            document.querySelector(\"#fps\").innerHTML = (1000 / (time - lastTime)).toFixed(2);\n        }\n        ticks += 1;\n        if (ticks > 5) ticks = 0;\n        lastTime = time;\n    }\n\n    sobelButton.current.addEventListener(\"click\", () => {\n        effect = effect === 1 ? 0 : 1\n    })\n\n    boxBlurButton.current.addEventListener(\"click\", () => {\n        effect = effect === 2 ? 0 : 2\n    })\n\n    sharpenButton.current.addEventListener(\"click\", () => {\n        effect = effect === 3 ? 0 : 3\n    })\n\n    embossButton.current.addEventListener(\"click\", () => {\n        effect = effect === 4 ? 0 : 4\n    })\n\n    laplacianButton.current.addEventListener(\"click\", () => {\n        effect = effect === 5 ? 0 : 5\n    });\n\n    (async () => {\n        makeWasmSrc();\n        //@ts-ignore\n        wasm = await wasm_bindgen(wasmSrc);\n        //@ts-ignore\n        memory = wasm.__wbindgen_export_0;\n        wasmLoaded()\n    })();\n\n}\n","import {useEffect, useRef} from \"react\";\nimport css from './cam.module.css'\nimport cam from './cam'\n\nfunction Cam() {\n    const canvas = useRef<HTMLCanvasElement>(null)\n    const video = useRef<HTMLVideoElement>(null)\n    const sobelButton = useRef<HTMLButtonElement>(null)\n    const boxBlurButton = useRef<HTMLButtonElement>(null)\n    const sharpenButton = useRef<HTMLButtonElement>(null)\n    const embossButton = useRef<HTMLButtonElement>(null)\n    const laplacianButton = useRef<HTMLButtonElement>(null)\n\n\n    useEffect(() => cam(canvas, video, sobelButton, boxBlurButton, sharpenButton, embossButton, laplacianButton),\n        [sobelButton, video, canvas])\n\n    return (\n        <div className={css.flex}>\n            <div className={css.sideDiv}>\n                <ul className={css.buttonList}>\n                    <li><button ref={sobelButton}>Sobel Edge Detection</button></li>\n                    <li><button ref={boxBlurButton}>Box Blur</button></li>\n                    <li><button ref={sharpenButton}>Sharpen</button></li>\n                    <li><button ref={embossButton}>Emboss</button></li>\n                    <li><button ref={laplacianButton}>Laplacian</button></li>\n                </ul>\n            </div>\n            <canvas ref={canvas} > </canvas>\n            <video className={css.hide} autoPlay={true} ref={video} />\n            <div className={css.sideDiv}></div>\n        </div>\n    );\n}\n\nexport default Cam;\n","import logo from './WebAssembly_Logo.svg';\nimport './App.css';\nimport Cam from \"./cam\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Cam effects with <code>wasm</code> and <code>rust</code> <span id={\"fps\"}></span>fps\n        </p>\n\n          <Cam />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"cam_hide__3ykpy\",\"flex\":\"cam_flex__2nGjf\",\"sideDiv\":\"cam_sideDiv__2z-E5\",\"buttonList\":\"cam_buttonList__28TZE\"};","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"box_blur\",\"sobel\",\"loadWasm\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"bd6347b03758c9d098bd.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}